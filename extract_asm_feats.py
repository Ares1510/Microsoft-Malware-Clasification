import os
import shutil
import re
import glob
from tqdm import tqdm
import concurrent.futures


def asm_file_extract(group):
    for file in tqdm(glob.glob(group + '/*.asm')):
        file_name = file.split('/')[3].split('.')[0]
        with open(group + '/' + file_name + '_opc.txt', 'w') as o, open(group + '/' + file_name + '_hed.txt', 'w') as h:  # Text files containing header and opcodes in order
            with open(file, 'r', errors='replace') as f:
                for line in f:
                    if ';' not in line:
                        header = re.search('(^.*?):', line)
                        opcode = re.search('(   )([a-z]+)( )', line)

                        if opcode != None:
                            opcode = opcode.group(2)
                            o.write(opcode + ' ')

                        if header != None:
                            header = header.group(1)
                            h.write(header + ' ')




def main():
    groups = glob.glob('train/asm/*')
    with concurrent.futures.ProcessPoolExecutor(max_workers=16) as executor:
        executor.map(asm_file_extract, groups)
    
    groups = glob.glob('test/asm/*')
    with concurrent.futures.ProcessPoolExecutor(max_workers=16) as executor:
        executor.map(asm_file_extract, groups)

if __name__ == "__main__":
    main()
import os
import numpy as np
import re
import glob
import pandas as pd
from tqdm import tqdm
import concurrent.futures


#Extract bytes unigrams
def bytes_ngram(group):
    bytes_array = np.zeros((len(glob.glob(group + '/*')), 257), dtype=int)
    with open(group + '/' + 'bytes_gram.csv', 'w') as b:
        b.write('file,0')                  # Writing header
        for i in range(256):
            code = str(hex(i)).strip('0x')
            b.write(code + ',')
        b.write('??')
        b.write('\n')
        for index, file in enumerate(tqdm(glob.glob(group + '/*.bytes'))):
            file_name = file.split('/')[3].split('.')[0]
            with open(file, 'r') as f:
                for line in f:
                    line = re.sub(r'[\d\w]{8} ', '', line) #removing memory address
                    for hex_code in line.split(' '):
                        if hex_code == '??' or hex_code == '??\n':
                            bytes_array[index][256] += 1
                        else:
                            bytes_array[index][int(hex_code, 16)] += 1
            b.write(file_name + ',')
            for pos, i in enumerate(bytes_array[index]):
                if pos != 256:
                    b.write(str(i) + ',') 
                else:
                    b.write(str(i))
            b.write('\n')

            
#Joining group csv's           
def join_csv(x):
    files = glob.glob(x + '/bytes/*/*.csv')
    dfs = []
    for file in files:
        dfs.append(pd.read_csv(file))
    final = pd.concat(dfs)
    final.to_csv(x + '/bytes_ngrams.csv', index=False)
    for file in files:
        os.remove(file)


def main():
    groups = glob.glob('train/bytes/*')
    with concurrent.futures.ProcessPoolExecutor(max_workers=16) as executor:
        executor.map(bytes_ngram, groups)
        
    join_csv('train')
    
    groups = glob.glob('test/bytes/*')
    with concurrent.futures.ProcessPoolExecutor(max_workers=16) as executor:
        executor.map(bytes_ngram, groups)
    
    join_csv('test')

if __name__ == "__main__":
    main()